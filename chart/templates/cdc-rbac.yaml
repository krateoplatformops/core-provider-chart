apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "core-provider.fullname" . }}-rbac-configmap
data:
  serviceaccount.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}
      namespace: {{`{{ .namespace }}`}}
  clusterrole.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}
    rules:
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs: ["get", "list"]
    - apiGroups: ["composition.krateo.io"]
      resources: ["*"]
      verbs: ["*"]
    - apiGroups: ["rbac.authorization.k8s.io"]
      resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
      verbs: ["*"]
    - apiGroups: [""]
      resources: ["namespaces"]
      verbs: ["get", "list", "watch", "create"]
  clusterrolebinding.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}
    subjects:
    - kind: ServiceAccount
      name: {{`{{ .serviceAccount }}`}}
      namespace: {{`{{ .saNamespace }}`}}
  compositiondefinition-role.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}
      namespace: {{`{{ .namespace }}`}}
    rules:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "list", "create", "delete", "update"]
    - apiGroups: [""]
      resources: ["events"]
      verbs: ["create", "patch", "update"]
    - apiGroups: ["core.krateo.io"]
      resources: ["compositiondefinitions", "compositiondefinitions/status"]
      verbs: ["get", "list", "watch"]
  compositiondefinition-rolebinding.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}
      namespace: {{`{{ .namespace }}`}}
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}
    subjects:
    - kind: ServiceAccount
      name: {{`{{ .serviceAccount }}`}}
      namespace: {{`{{ .saNamespace }}`}}
  secret-role.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}-secret
      namespace: {{`{{ .namespace }}`}}
    rules:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "list", "watch"]
      resourceNames: ["{{`{{ .secretName}}`}}"]
  secret-rolebinding.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}-secret
      namespace: {{`{{ .namespace }}`}}
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: {{`{{ .resource }}`}}-{{`{{ .apiVersion }}`}}-secret
    subjects:
    - kind: ServiceAccount
      name: {{`{{ .serviceAccount }}`}}
      namespace: {{`{{ .saNamespace }}`}}